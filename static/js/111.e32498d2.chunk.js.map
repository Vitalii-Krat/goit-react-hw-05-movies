{"version":3,"file":"static/js/111.e32498d2.chunk.js","mappings":"4PAKO,SAASA,IAId,OAHoBC,IAAAA,IAAA,UAHL,8BAGK,8BAJN,2CAIM,+BAEjBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,Q,mDCLlBC,EAAmBC,EAAAA,GAAAA,GAAH,wIAQhBC,GAAmBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8F,SCPd,SAASG,EAAT,GAAgC,IAAVC,EAAS,EAATA,MAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,GACCA,EAAMG,KAAI,kBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAgBC,EAA9B,EAA8BA,KAA9B,OACR,SAACV,EAAD,CACEW,MAAO,CAAEC,KAAMR,GACfS,GAAE,kBAAaN,GAFjB,0BAKGC,QALH,IAKGA,EAAAA,EAASC,SALZ,QAK8BC,GAFvBH,QCXeR,EAAAA,GAAAA,GAAH,sBAAtB,IACMe,EAAcf,EAAAA,GAAAA,GAAH,kE,UCyBT,SAASgB,IACtB,MAvB0B,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,kBAGwBE,IAA2B1B,MAC7C,SAAAE,GAAI,OAAIA,EAAKyB,WAJnB,OAGUnB,EAHV,OAMIc,EAASd,GANb,yEASIgB,GAAW,GATf,6EADc,uBAAC,WAAD,wBAadI,KACC,IACI,CAAEpB,MAAAA,EAAOe,QAAAA,GAIWM,GAAnBrB,EAAR,EAAQA,MAAOe,EAAf,EAAeA,QAEf,OACE,4BACE,SAACJ,EAAD,6BACCI,IAAW,SAACO,EAAA,EAAD,IACXtB,IAAS,SAACD,EAAD,CAAYC,MAAOA","sources":["services/fetch-api.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'api_key=420bed62ddaa3595adaa74e668147d82';\nconst MAIN_URL = 'https://api.themoviedb.org/';\n\nexport function fetchMoviesAPI() {\n  const fetchMovies = axios\n    .get(`${MAIN_URL}3/trending/all/day?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMovies;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMoviesStyled = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding-top: 20px;\n  list-style: none;\n`;\n\nexport const ItemMoviesStyled = styled(NavLink)`\n  text-decoration: none;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ListMoviesStyled, ItemMoviesStyled } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ items }) {\n  const location = useLocation();\n  return (\n    <ListMoviesStyled>\n      {items &&\n        items.map(({ id, title, original_title, name }) => (\n          <ItemMoviesStyled\n            state={{ from: location }}\n            to={`/movies/${id}`}\n            key={id}\n          >\n            {title ?? original_title ?? name}\n          </ItemMoviesStyled>\n        ))}\n    </ListMoviesStyled>\n  );\n}\n\nMoviesList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListMoviesStyled = styled.ul``;\nexport const TitleStyled = styled.h1`\n  text-align: center;\n  font-size: 700;\n`;\n","import { useEffect, useState } from 'react';\nimport * as MoviesAPI from '../../services/fetch-api';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { TitleStyled } from './HomePage.styled';\nimport Loader from '../../components/Loader/Loader';\n\nconst useFetchTrendMovies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchTrendMovies() {\n      setLoading(true);\n      try {\n        const items = await MoviesAPI.fetchMoviesAPI().then(\n          data => data.results\n        );\n        setItems(items);\n      } catch (error) {\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTrendMovies();\n  }, []);\n  return { items, loading };\n};\n\nexport default function HomePage() {\n  const { items, loading } = useFetchTrendMovies();\n\n  return (\n    <div>\n      <TitleStyled>Trending today</TitleStyled>\n      {loading && <Loader />}\n      {items && <MoviesList items={items}></MoviesList>}\n    </div>\n  );\n}\n"],"names":["fetchMoviesAPI","axios","then","response","data","ListMoviesStyled","styled","ItemMoviesStyled","NavLink","MoviesList","items","location","useLocation","map","id","title","original_title","name","state","from","to","TitleStyled","HomePage","useState","setItems","loading","setLoading","useEffect","MoviesAPI","results","fetchTrendMovies","useFetchTrendMovies","Loader"],"sourceRoot":""}