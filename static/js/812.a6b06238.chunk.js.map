{"version":3,"file":"static/js/812.a6b06238.chunk.js","mappings":"uNAGaA,EAAmBC,EAAAA,GAAAA,GAAH,8GAMhBC,GAAmBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uUAehBG,EAAmBH,EAAAA,GAAAA,EAAH,8C,mBCfd,SAASI,EAAT,GAAgC,IAAVC,EAAS,EAATA,MAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACGM,GACCA,EAAMG,KACJ,kBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAgBC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,cAAeC,EAAnD,EAAmDA,YAAnD,OACE,SAACb,EAAD,CACEc,MAAO,CAAEC,KAAMV,GACfW,GAAE,kBAAaR,GAFjB,UAKE,4BACE,gBACES,KACa,OAAXJ,QAAW,IAAXA,EAAAA,EAAeD,GAAf,iDAEMC,QAFN,IAEMA,EAAAA,EAAeD,GAEjBM,EAENC,IAAG,OAAEV,QAAF,IAAEA,EAAAA,EAASE,KAEhB,SAACT,EAAD,2BACGO,QADH,IACGA,EAAAA,EAASC,SADZ,QAC8BC,QAd3BH,U,qJCjBNY,E,QAAcrB,GAAAA,GAAH,kE,mBC0BT,SAASsB,IACtB,MAvB0B,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,kBAGwBE,EAAAA,KAA2BC,MAC7C,SAAAC,GAAI,OAAIA,EAAKC,WAJnB,OAGU1B,EAHV,OAMImB,EAASnB,GANb,yEASIqB,GAAW,GATf,6EADc,uBAAC,WAAD,wBAadM,KACC,IACI,CAAE3B,MAAAA,EAAOoB,QAAAA,GAIWQ,GAAnB5B,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,QAEf,OACE,4BACE,SAACJ,EAAD,mCACCI,IAAW,SAACS,EAAA,EAAD,IACX7B,IAAS,SAACD,EAAA,EAAD,CAAYC,MAAOA,S,6KCjC7B8B,EAAU,2CACVC,EAAW,8BACXC,EAAW,iBAEV,SAASC,IAId,OAHoBC,IAAAA,IAAA,UACVH,EADU,8BACoBD,EADpB,+BAEjBN,MAAK,SAAAW,GAAQ,OAAIA,EAASV,QAIxB,SAASW,EAAiBC,GAM/B,OALyBH,IAAAA,IAAA,UAElBH,EAFkB,0BAEQD,EAFR,YAEmBE,EAFnB,6CAEgEK,IAEtFb,MAAK,SAAAW,GAAQ,OAAIA,EAASV,QAIxB,SAASa,EAAgBlC,GAI9B,OAHsB8B,IAAAA,IAAA,UACZH,EADY,mBACO3B,EADP,YACa0B,EADb,+BAEnBN,MAAK,SAAAW,GAAQ,OAAIA,EAASV,QAIxB,SAASc,EAAgBnC,GAI9B,OAHwB8B,IAAAA,IAAA,UACdH,EADc,mBACK3B,EADL,oBACmB0B,EADnB,YAC8BE,IACnDR,MAAK,SAAAW,GAAQ,OAAIA,EAASV,QAIxB,SAASe,EAAmBpC,GAIjC,OAH2B8B,IAAAA,IAAA,UACjBH,EADiB,mBACE3B,EADF,oBACgB0B,EADhB,YAC2BE,EAD3B,YAExBR,MAAK,SAAAW,GAAQ,OAAIA,EAASV,U","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/apiService.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMoviesStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: 510px;\n`;\n\nexport const CardMoviesStyled = styled(NavLink)`\n  text-decoration: none;\n  font-size: 22px;\n  margin-bottom: 10px;\n  border: 1px solid grey;\n  box-shadow: 3px 3px blue, -1em 0 0.4em lightblue;\n  width: 300px;\n\n  &:hover {\n    box-shadow: 3px 3px lightcoral, -1em 0 0.4em lightcoral;\n    transform: scale(1.012);\n    transition: 300ms;\n  }\n`;\n\nexport const MovieTitleStyled = styled.p`\n  display: contents;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  ListMoviesStyled,\n  CardMoviesStyled,\n  MovieTitleStyled,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport NoImage from '../../images/NoImage.png';\n\nexport default function MoviesList({ items }) {\n  const location = useLocation();\n  return (\n    <ListMoviesStyled>\n      {items &&\n        items.map(\n          ({ id, title, original_title, name, backdrop_path, poster_path }) => (\n            <CardMoviesStyled\n              state={{ from: location }}\n              to={`/movies/${id}`}\n              key={id}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path ?? backdrop_path\n                      ? `https://image.tmdb.org/t/p/w500/${\n                          poster_path ?? backdrop_path\n                        }`\n                      : NoImage\n                  }\n                  alt={title ?? name}\n                />\n                <MovieTitleStyled>\n                  {title ?? original_title ?? name}\n                </MovieTitleStyled>\n              </div>\n            </CardMoviesStyled>\n          )\n        )}\n    </ListMoviesStyled>\n  );\n}\n\nMoviesList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TitleStyled = styled.h1`\n  text-align: center;\n  font-size: 700;\n`;\n","import { useEffect, useState } from 'react';\nimport * as MoviesAPI from '../../services/apiService';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { TitleStyled } from './HomePage.styled';\nimport Loader from '../../components/Loader/Loader';\n\nconst useFetchTrendMovies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchTrendMovies() {\n      setLoading(true);\n      try {\n        const items = await MoviesAPI.fetchMoviesAPI().then(\n          data => data.results\n        );\n        setItems(items);\n      } catch (error) {\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTrendMovies();\n  }, []);\n  return { items, loading };\n};\n\nexport default function HomePage() {\n  const { items, loading } = useFetchTrendMovies();\n\n  return (\n    <div>\n      <TitleStyled>Trending movie today</TitleStyled>\n      {loading && <Loader />}\n      {items && <MoviesList items={items}></MoviesList>}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=420bed62ddaa3595adaa74e668147d82';\nconst MAIN_URL = 'https://api.themoviedb.org/';\nconst LANGUAGE = 'language=en-US';\n\nexport function fetchMoviesAPI() {\n  const fetchMovies = axios\n    .get(`${MAIN_URL}3/trending/all/day?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMovies;\n}\n\nexport function fetchMoviesQuery(query) {\n  const fetchMoviesQuery = axios\n    .get(\n      `${MAIN_URL}3/search/movie?${API_KEY}&${LANGUAGE}&page=1&include_adult=false&query=${query}`\n    )\n    .then(response => response.data);\n  return fetchMoviesQuery;\n}\n\nexport function fetchMoviesById(id) {\n  const fetchMoviesId = axios\n    .get(`${MAIN_URL}3/movie/${id}?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMoviesId;\n}\n\nexport function fetchMoviesCast(id) {\n  const fetchMoviesCast = axios\n    .get(`${MAIN_URL}3/movie/${id}/credits?${API_KEY}&${LANGUAGE}`)\n    .then(response => response.data);\n  return fetchMoviesCast;\n}\n\nexport function fetchMoviesReviews(id) {\n  const fetchMoviesReviews = axios\n    .get(`${MAIN_URL}3/movie/${id}/reviews?${API_KEY}&${LANGUAGE}&page=1`)\n    .then(response => response.data);\n  return fetchMoviesReviews;\n}\n"],"names":["ListMoviesStyled","styled","CardMoviesStyled","NavLink","MovieTitleStyled","MoviesList","items","location","useLocation","map","id","title","original_title","name","backdrop_path","poster_path","state","from","to","src","NoImage","alt","TitleStyled","HomePage","useState","setItems","loading","setLoading","useEffect","MoviesAPI","then","data","results","fetchTrendMovies","useFetchTrendMovies","Loader","API_KEY","MAIN_URL","LANGUAGE","fetchMoviesAPI","axios","response","fetchMoviesQuery","query","fetchMoviesById","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}