{"version":3,"file":"static/js/122.aac358c5.chunk.js","mappings":"+QAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAESL,EAFT,iEAK8BM,EAAAA,GAA6BN,GAASO,MAC9D,SAAAC,GAAI,OAAIA,EAAKC,WANnB,UAQ+B,KAHrBC,EALV,QAQoBC,OARpB,yCASaP,EAAW,OATxB,OAWIA,EAAWM,GAXf,kDAaIE,EAAAA,GAAAA,MAAY,kCAbhB,2DADc,uBAAC,WAAD,wBAiBdC,KACC,CAACb,KAGF,2BACIG,IAAW,+DACZA,GACCA,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,W,6KChCbG,EAAU,2CACVC,EAAW,8BACXC,EAAW,iBAEV,SAASC,IAId,OAHoBC,IAAAA,IAAA,UACVH,EADU,8BACoBD,EADpB,+BAEjBX,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,QAIxB,SAASC,EAAiBC,GAM/B,OALyBJ,IAAAA,IAAA,UAElBH,EAFkB,0BAEQD,EAFR,YAEmBE,EAFnB,6CAEgEM,IAEtFnB,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,QAIxB,SAASG,EAAgBZ,GAI9B,OAHsBO,IAAAA,IAAA,UACZH,EADY,mBACOJ,EADP,YACaG,EADb,+BAEnBX,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,QAIxB,SAASI,EAAgBb,GAI9B,OAHwBO,IAAAA,IAAA,UACdH,EADc,mBACKJ,EADL,oBACmBG,EADnB,YAC8BE,IACnDb,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,QAIxB,SAASK,EAAmBd,GAIjC,OAH2BO,IAAAA,IAAA,UACjBH,EADiB,mBACEJ,EADF,oBACgBG,EADhB,YAC2BE,EAD3B,YAExBb,MAAK,SAAAgB,GAAQ,OAAIA,EAASC","sources":["components/Reviews/Reviews.jsx","services/apiService.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport * as MoviesAPI from '../../services/apiService';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        if (!movieId) {\n          return;\n        }\n        const fetchReview = await MoviesAPI.fetchMoviesReviews(movieId).then(\n          item => item.results\n        );\n        if (fetchReview.length === 0) {\n          return setReviews(null);\n        }\n        setReviews(fetchReview);\n      } catch (error) {\n        toast.error('No any reviews for this movie!');\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {!reviews && <p>No any reviews find for this movie!</p>}\n      {reviews &&\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=420bed62ddaa3595adaa74e668147d82';\nconst MAIN_URL = 'https://api.themoviedb.org/';\nconst LANGUAGE = 'language=en-US';\n\nexport function fetchMoviesAPI() {\n  const fetchMovies = axios\n    .get(`${MAIN_URL}3/trending/all/day?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMovies;\n}\n\nexport function fetchMoviesQuery(query) {\n  const fetchMoviesQuery = axios\n    .get(\n      `${MAIN_URL}3/search/movie?${API_KEY}&${LANGUAGE}&page=1&include_adult=false&query=${query}`\n    )\n    .then(response => response.data);\n  return fetchMoviesQuery;\n}\n\nexport function fetchMoviesById(id) {\n  const fetchMoviesId = axios\n    .get(`${MAIN_URL}3/movie/${id}?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMoviesId;\n}\n\nexport function fetchMoviesCast(id) {\n  const fetchMoviesCast = axios\n    .get(`${MAIN_URL}3/movie/${id}/credits?${API_KEY}&${LANGUAGE}`)\n    .then(response => response.data);\n  return fetchMoviesCast;\n}\n\nexport function fetchMoviesReviews(id) {\n  const fetchMoviesReviews = axios\n    .get(`${MAIN_URL}3/movie/${id}/reviews?${API_KEY}&${LANGUAGE}&page=1`)\n    .then(response => response.data);\n  return fetchMoviesReviews;\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","MoviesAPI","then","item","results","fetchReview","length","toast","fetchReviews","map","id","author","content","API_KEY","MAIN_URL","LANGUAGE","fetchMoviesAPI","axios","response","data","fetchMoviesQuery","query","fetchMoviesById","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}