{"version":3,"file":"static/js/913.c9e5e7aa.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/apiService.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMoviesStyled = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: 510px;\n`;\n\nexport const CardMoviesStyled = styled(NavLink)`\n  text-decoration: none;\n  font-size: 22px;\n  margin-bottom: 10px;\n  border: 1px solid grey;\n  box-shadow: 3px 3px blue, -1em 0 0.4em lightblue;\n  width: 300px;\n\n  &:hover {\n    box-shadow: 3px 3px lightcoral, -1em 0 0.4em lightcoral;\n    transform: scale(1.012);\n    transition: 300ms;\n  }\n`;\n\nexport const MovieTitleStyled = styled.p`\n  display: contents;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  ListMoviesStyled,\n  CardMoviesStyled,\n  MovieTitleStyled,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport NoImage from '../../images/NoImage.png';\n\nexport default function MoviesList({ items }) {\n  const location = useLocation();\n  return (\n    <ListMoviesStyled>\n      {items &&\n        items.map(\n          ({ id, title, original_title, name, backdrop_path, poster_path }) => (\n            <CardMoviesStyled\n              state={{ from: location }}\n              to={`/movies/${id}`}\n              key={id}\n            >\n              <div>\n                <img\n                  src={\n                    poster_path ?? backdrop_path\n                      ? `https://image.tmdb.org/t/p/w500/${\n                          poster_path ?? backdrop_path\n                        }`\n                      : NoImage\n                  }\n                  alt={title ?? name}\n                />\n                <MovieTitleStyled>\n                  {title ?? original_title ?? name}\n                </MovieTitleStyled>\n              </div>\n            </CardMoviesStyled>\n          )\n        )}\n    </ListMoviesStyled>\n  );\n}\n\nMoviesList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  padding-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ButtonStyled = styled.button`\n  margin-left: 10px;\n  border-radius: 20px;\n  border-color: grey;\n  height: 30px;\n`;\n\nexport const SearchStyled = styled.input`\n  width: 250px;\n  height: 30px;\n  border-radius: 20px;\n`;\n\nexport const ReturnStyled = styled.span`\n  color: black;\n  font-size: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { GiReturnArrow } from 'react-icons/gi';\nimport toast from 'react-hot-toast';\nimport * as MoviesAPI from '../../services/apiService';\nimport MoviesList from '../../components/MoviesList';\nimport {\n  SearchStyled,\n  FormStyled,\n  ButtonStyled,\n  ReturnStyled,\n} from './MoviesPage.styled';\nimport Loader from '../../components/Loader';\n\nexport default function MoviesPageSearch() {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  const handlerSubmitUser = event => {\n    event.preventDefault();\n    const userQuery = event.currentTarget.elements.query.value.trim();\n    setSearchParams({ query: userQuery });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setLoading(true);\n    setMovies([]);\n    try {\n      async function fetchMoviesQ() {\n        const fetchMovies = await MoviesAPI.fetchMoviesQuery(query);\n        if (fetchMovies.total_results === 0) {\n          toast.error(`No any movies on query ${query}!`);\n          setLoading(false);\n          return;\n        }\n        setMovies(fetchMovies.results);\n        setLoading(false);\n      }\n      fetchMoviesQ();\n    } catch (error) {\n      toast.error(`Error something went wrong!`);\n      setLoading(false);\n    }\n  }, [query]);\n\n  return (\n    <>\n      <Link to={location?.state?.from ?? '/'} state={{ from: location }}>\n        <ReturnStyled>\n          <GiReturnArrow /> Return\n        </ReturnStyled>\n      </Link>\n      <FormStyled onSubmit={handlerSubmitUser}>\n        <SearchStyled\n          name=\"query\"\n          required\n          id=\"film-name\"\n          type=\"text\"\n          aria-label=\"search\"\n          minLength=\"2\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie name\"\n        />\n        <ButtonStyled type=\"submit\">\n          <span>Search movies</span>\n        </ButtonStyled>\n      </FormStyled>\n      {loading && <Loader />}\n      {movies && <MoviesList items={movies}></MoviesList>}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'api_key=420bed62ddaa3595adaa74e668147d82';\nconst MAIN_URL = 'https://api.themoviedb.org/';\nconst LANGUAGE = 'language=en-US';\n\nexport function fetchMoviesAPI() {\n  const fetchMovies = axios\n    .get(`${MAIN_URL}3/trending/all/day?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMovies;\n}\n\nexport function fetchMoviesQuery(query) {\n  const fetchMoviesQuery = axios\n    .get(\n      `${MAIN_URL}3/search/movie?${API_KEY}&${LANGUAGE}&page=1&include_adult=false&query=${query}`\n    )\n    .then(response => response.data);\n  return fetchMoviesQuery;\n}\n\nexport function fetchMoviesById(id) {\n  const fetchMoviesId = axios\n    .get(`${MAIN_URL}3/movie/${id}?${API_KEY}&append_to_response=images`)\n    .then(response => response.data);\n  return fetchMoviesId;\n}\n\nexport function fetchMoviesCast(id) {\n  const fetchMoviesCast = axios\n    .get(`${MAIN_URL}3/movie/${id}/credits?${API_KEY}&${LANGUAGE}`)\n    .then(response => response.data);\n  return fetchMoviesCast;\n}\n\nexport function fetchMoviesReviews(id) {\n  const fetchMoviesReviews = axios\n    .get(`${MAIN_URL}3/movie/${id}/reviews?${API_KEY}&${LANGUAGE}&page=1`)\n    .then(response => response.data);\n  return fetchMoviesReviews;\n}\n"],"names":["ListMoviesStyled","styled","CardMoviesStyled","NavLink","MovieTitleStyled","MoviesList","items","location","useLocation","map","id","title","original_title","name","backdrop_path","poster_path","state","from","to","src","NoImage","alt","FormStyled","ButtonStyled","SearchStyled","ReturnStyled","MoviesPageSearch","useState","loading","setLoading","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesQ","MoviesAPI","fetchMovies","total_results","toast","results","error","onSubmit","event","preventDefault","userQuery","currentTarget","elements","value","trim","required","type","minLength","autoComplete","autoFocus","placeholder","Loader","API_KEY","MAIN_URL","LANGUAGE","fetchMoviesAPI","axios","then","response","data","fetchMoviesQuery","fetchMoviesById","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}